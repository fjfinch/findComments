#!/bin/bash

# Use this script simultaneously besides a web content scanner (ex. gobuster,dirbuster,dirsearch)
# Of which the scanner should give its output to this scripts input.
# Ex. 	gobuster dir -u <IP> -w <WORDLIST> -en -o pages.txt
# 	findComments pages.txt

# Or use the script with a pre made file with pages in it. Make sure output is curlable.
# CTRL+C to cancel
# ----------------------------------------------------------------------

#COLORED OUTPUT
declare -r RED='\033[0;31m'
declare -r RED_BOLD='\033[1;31m'
declare -r ORANGE_BOLD='\033[1;33m'
declare -r BLUE_BOLD='\033[1;36m'
declare -r RESET='\033[0m'

#IS AN ARGUMENT (a file) GIVEN?
if [ "$#" -ne 1 ]; then
        printf "${RED}Missing file.${RESET} Usage: %s <FILE>\n" "$(basename "$0")"
        exit 1
fi

#VARIABLES
declare -r FILE="$1"
declare -a list=()

#DOES THE FILE EXIST?
if [ ! -f "${FILE}" ]; then
	printf "${RED}File doesn't exist${RESET}\n"
	exit 1
fi

printf "[*] ${BLUE_BOLD}Reading file: '%s'...${RESET}\n" "${FILE}"

#SCRIPT ALWAYS RUNNING (CTRL+C to end)
while true; do
	#READ PAGES FROM FILE
	while IFS= read -r page; do
		#IF PAGE IS ALREADY SCANNED: IGNORE
		if ! [[ "${list[@]}" =~ (^|[[:space:]])"${page}"([[:space:]]|$) ]]; then
			#ADD PAGE TO LIST, SO IT WONT BE SCANNED AGAIN
			list+=("${page}")

			#CURL PAGE or DISPLAY ERROR
			if ! output="$(curl -L -k -s "${page}" 2>/dev/null)"; then
				printf "${RED_BOLD}Error reading page: %s${RESET}\n" "${page}"
				continue
			fi

			#OUTPUT PAGE NAME
			printf "${ORANGE_BOLD}%s${RESET}\n" "${page}"

			#REGEX FOR HTML,XML,Javascript,CSS,PHP,Java | MULTI-LINE COMMENTS
			echo "${output}" | awk '/<!--/,/-->/; /\/\*/,/\*\// {print $0}' \
			| perl -pe 's@^.*?(<!--|/\*)@\1@; s@(.*)(-->|\*/).*$@\1\2@; s|(-->).*?(<!--)|\1 \2|g; s|(\*/).*?(/\*)|\1 \2|g'
		fi
	done < "${FILE}"

	#RUN SCRIPT EVERY SECOND
	sleep 1
done
